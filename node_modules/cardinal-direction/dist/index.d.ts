/**
 * There are 32 cardinal-type direction on a compass.
 * - This numeric enum is `0` indexed.
 */
export declare enum CardinalDirection {
    "N" = 0,
    "NbE" = 1,
    "NNE" = 2,
    "NEbN" = 3,
    "NE" = 4,
    "NEbE" = 5,
    "ENE" = 6,
    "EbN" = 7,
    "E" = 8,
    "EbS" = 9,
    "ESE" = 10,
    "SEbE" = 11,
    "SE" = 12,
    "SEbS" = 13,
    "SSE" = 14,
    "SbE" = 15,
    "S" = 16,
    "SbW" = 17,
    "SSW" = 18,
    "SWbS" = 19,
    "SW" = 20,
    "SWbW" = 21,
    "WSW" = 22,
    "WbS" = 23,
    "W" = 24,
    "WbN" = 25,
    "WNW" = 26,
    "NWbW" = 27,
    "NW" = 28,
    "NWbN" = 29,
    "NNW" = 30,
    "NbW" = 31
}
/**
 * Used to restrict the type of cardinal direction that can be returned by `cardinalFromDegree`. When a subset is specified the degree will be pushed the the nearest acceptable cardinal.
 * @member Full - All directions can be returned. ___[DEFAULT]___
 * @member Basic - Specifies only basic _(N,E,S,W)_ can be returned.
 * @member Ordinal - Extends on `Basic`, allowing _(NE,SE etc..)_ to be returned.
 * @member Intercardinal - Extends on `Ordinal, allowing _(NNE,ENE etc...)_ to re returned.
 */
export declare enum CardinalSubset {
    Full = 1,
    Basic = 8,
    Ordinal = 4,
    Intercardinal = 2
}
/**
 * Converts a compass degree [0-360] into its correlated cardinal direction.
 * @param degree - The compass degree to covert [0-360].
 * @param subset - _[optional]_ Specifies the type of cardinal that can be returned. See `CardinalSubset` enum for details.
 * @return [string] A `CardinalDirection` enum member value.
 */
export declare function cardinalFromDegree(degree: number, subset?: CardinalSubset): string;
/**
 * Converts a cardinal direction into its correlated compass degree value.
 * @param cardinal - One of the `CardinalDirection` enum member values.
 * @return [number] A compas degree between [0-360].
 */
export declare function degreeFromCardinal(cardinal: CardinalDirection): number;
/**
 * Takes a cardinal value and converts it to either its abbreviation or full title.
 * Integer representations are explicitly converted to cardinal abbreviations.
 * See the `Cardinal Table` in the README for context.
 * @param cardinal - One of the `CardinalDirection` enum member values, or its full title.
 * @returns [string] The converted cardinal value.
 */
export declare function cardinalConverter(cardinal: string | number): string;
